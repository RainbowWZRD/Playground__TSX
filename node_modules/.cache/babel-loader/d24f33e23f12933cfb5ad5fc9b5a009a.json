{"ast":null,"code":"var _jsxFileName = \"/Users/wzrd/React_Typescript--TODO/src/components/NewTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTodo = props => {\n  _s();\n\n  // const [newTodo, setNewTodo] = useState<string>('')\n  const inputRef = useRef(null);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const entered = {\n      text: inputRef.current.value,\n      id: new Date().toISOString\n    };\n\n    if (entered['text'].trim().length === 0) {\n      return;\n    }\n\n    props.onAddTodo(entered);\n    console.log(entered);\n  }; // const handleInputChange = (event : React.HTMLInputElement) => {\n  //   setNewTodo(event.target.value)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"text\",\n      children: \"New Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"text\",\n      type: \"text\",\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\n_s(NewTodo, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n\n_c = NewTodo;\nexport default NewTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTodo\");","map":{"version":3,"sources":["/Users/wzrd/React_Typescript--TODO/src/components/NewTodo.tsx"],"names":["React","useRef","NewTodo","props","inputRef","handleSubmit","event","preventDefault","entered","text","current","value","id","Date","toISOString","trim","length","onAddTodo","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;;;AAEA,MAAMC,OAAkE,GAAIC,KAAD,IAAW;AAAA;;AACpF;AAGA,QAAMC,QAAQ,GAAGH,MAAM,CAAmB,IAAnB,CAAvB;;AAEA,QAAMI,YAAY,GAAIC,KAAD,IAA6B;AAChDA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,OAAO,GAAG;AAACC,MAAAA,IAAI,EAAEL,QAAQ,CAACM,OAAT,CAAkBC,KAAzB;AAAgCC,MAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC;AAA/C,KAAhB;;AAEA,QAAGN,OAAO,CAAC,MAAD,CAAP,CAAiBO,IAAjB,GAAwBC,MAAxB,KAAmC,CAAtC,EAAyC;AACvC;AACD;;AACDb,IAAAA,KAAK,CAACc,SAAN,CAAgBT,OAAhB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACD,GATD,CANoF,CAiBpF;AACA;AACA;;;AAEA,sBAAO;AAAM,IAAA,QAAQ,EAAEH,YAAhB;AAAA,4BACL;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,eAEL;AAAQ,MAAA,EAAE,EAAC,MAAX;AAAkB,MAAA,IAAI,EAAC,MAAvB;AAA8B,MAAA,GAAG,EAAED;AAAnC;AAAA;AAAA;AAAA;AAAA,YAFK,eAGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKD,CA1BD;;GAAMF,O;;KAAAA,O;AA4BN,eAAeA,OAAf","sourcesContent":["import React, {useRef} from \"react\"\n\nconst NewTodo: React.FC<{onAddTodo: (text: string, id: string) => void}> = (props) => {\n  // const [newTodo, setNewTodo] = useState<string>('')\n\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const handleSubmit = (event : React.FormEvent) => {\n    event.preventDefault();\n    const entered = {text: inputRef.current!.value, id: new Date().toISOString};\n\n    if(entered['text']!.trim().length === 0) {\n      return;\n    }\n    props.onAddTodo(entered)\n    console.log(entered)\n  }\n\n  // const handleInputChange = (event : React.HTMLInputElement) => {\n  //   setNewTodo(event.target.value)\n  // }\n\n  return <form onSubmit={handleSubmit}>\n    <label htmlFor='text'>New Todo</label>\n    <input  id='text' type='text' ref={inputRef} />\n    <button>Add Todo</button> \n  </form>\n}\n\nexport default NewTodo;\n"]},"metadata":{},"sourceType":"module"}